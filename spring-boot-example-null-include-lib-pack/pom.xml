<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>yyl</groupId>
	<artifactId>spring-boot-example-null-include-lib-pack</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spring-boot-example-null-include-lib-pack</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>

		<!-- _spring-boot-web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- _test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!--<([mvn clean package])> -->
	<!-- 打包会排除依赖包，相关依赖包会被拷贝到 target/lib 目录中 -->
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!--重写包含依赖，包含不存在的依赖，jar里没有pom里的依赖 -->
					<includes>
						<include>
							<groupId>null</groupId>
							<artifactId>null</artifactId>
						</include>
					</includes>
					<layout>ZIP</layout>
					<!--使用外部配置文件，jar包里没有资源文件 -->
					<addResources>true</addResources>
					<!-- 输出路径 -->
					<outputDirectory>${project.build.directory}</outputDirectory>
					<!-- 是否注入可执行脚本 -->
					<executable>false</executable>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<!--配置jar包特殊标识 配置后，保留原文件，生成新文件 *-run.jar -->
							<!--配置jar包特殊标识 不配置，原文件命名为 *.jar.original，生成新文件 *.jar -->
							<!--<classifier>run</classifier> -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 打jar包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<!-- LIB路径 -->
							<classpathPrefix>lib/</classpathPrefix>
							<!-- 应用程序入口类 -->
							<mainClass>yyl.springboot.SpringBootNullIncludeLibPackApplication</mainClass>
						</manifest>
						<!-- <manifestEntries> -->
						<!-- <Class-Path>resource/</Class-Path> -->
						<!-- </manifestEntries> -->
					</archive>
				</configuration>
			</plugin>
			<!--拷贝依赖包 copy-dependency -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- 测试单元 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<useSystemClassLoader>false</useSystemClassLoader>
					<!-- 跳过测试 -->
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<!--拷贝资源文件 copy-resources -->
			<!-- [ <plugin>] -->
			<!-- [ <artifactId>maven-resources-plugin</artifactId>] -->
			<!-- [ <executions>] -->
			<!-- [ <execution>] -->
			<!-- [ <id>copy-resources</id>] -->
			<!-- [ <phase>package</phase>] -->
			<!-- [ <goals>] -->
			<!-- [<goal>copy-resources</goal>] -->
			<!-- [ </goals>] -->
			<!-- [ <configuration>] -->
			<!-- [ <resources>] -->
			<!-- [ <resource>] -->
			<!-- [ <directory>src/main/resources/config</directory>] -->
			<!-- [ </resource>] -->
			<!-- [</resources>] -->
			<!-- [<outputDirectory>${project.build.directory}/config</outputDirectory>] -->
			<!-- [</configuration>] -->
			<!-- [ </execution>] -->
			<!-- [ </executions>] -->
			<!-- [ </plugin>] -->
		</plugins>
	</build>


</project>