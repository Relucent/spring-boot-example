#################################################################################
# 配置文件中允许使用占位符，例如 ${port:80}，运行时可以用 Java -jar app.jar --server.port=8081 方式来传递参数  
# #配置说明
# server.port | 服务端口，默认为8080
# server.port | 最大超时时间(分钟)，默认为30
# server.address | 该服务绑定IP地址，启动服务器时如本机不是该IP地址则抛出异常启动失败，只有特殊需求的情况下才配置
# server.port.session.timeout | SESSION 超时时间 (单位秒)
# server.tomcat.max-threads | tomcat最大线程数，默认为200
# server.tomcat.uri-encoding | tomcat编码，默认为UTF-8
# server.tomcat.basedir | 存放Tomcat的日志、Dump等文件的临时文件夹，默认为系统的tmp文件夹(如：C:\Users\Admin\AppData\Local\Temp)
# server.tomcat.access-log-enabled | Tomcat-Access日志是否开启，true|false
# server.tomcat.access-log-pattern | Tomcat-Access日志格式
# server.tomcat.accesslog.directory | Tomcat-Access日志目录，默认在basedir/logs
# 
# logging.path | 日志文件目录，；例如 D:/spring-boot-example/logs
# logging.file | 日志文件名称，默认为spring.log
# logging.config | 日志配置文件，默认为classpath:logback.xml (logback的配置文件)
# logging.level.* | 日志级别 (TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF)
# logging.level.root | root日志的级别
# logging.level.org.springframework | org.springframework的日志级别，默认是DEBUG
#################################################################################

server: 
 port: ${port:8080}
 session:
    timeout: 1800
 context-path: /
 servlet-path: /
 tomcat: 
  basedir: target/tomcat
# compression: 
#  enabled: true
#  mime-types: application/json,application/xml,text/html,text/xml,text/plain
#  min-response-size: 2048


## keytool -genkey -alias keystore -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
# port: 8443
# ssl: 
#  key-store: classpath:keystore.p12
#  key-store-password: password
#  keyStoreType: PKCS12
#  keyAlias: keystore

banner:
  charset: UTF-8
  location: classpath:config

spring: 
# mvc:
#  view: 
#   prefix: /WEB-INF/jsp/ 
#   suffix: .jsp 

 thymeleaf: 
  prefix: classpath:/templates/
  suffix: .html
#  mode: HTML5
  mode: LEGACYHTML5
  encoding: UTF-8
  content-type: text/html
  cache: false

# curl -u admin:admin -X POST http://127.0.0.1:8005/shutdown
endpoints: 
 shutdown: 
  enabled: true
  path: /shutdown
management: 
 port: 8005
 address: 127.0.0.1
#security: 
# user: 
#  name: admin
#  password: admin
 info:
  git:
   mode: full

application: 
 name: 'Example'
 message: Hello Spring-Boot
 model-name: YYL

#(TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF)
logging: 
 level: 
  root: ERROR
  org.springframework: ERROR
  yyl.springboot.Application: INFO

... 